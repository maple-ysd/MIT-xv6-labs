  e->next = n;
  *p = e;
 在insert函数里面这两行是产生missing的根源
 
 当两个线程同时调用insert且插入同一个桶时,先创建的entry会由于后一个entry的创建与插入而被丢弃
 因此可以在调用insert前获取锁,在insert后释放锁,若是这样,经测试可以直接通过safe和fast测试而无需添加一组锁,当然一组锁也能通过测试,但是测试结果显示没必要,性能反而降了一些
 
 另外若是不放心,比如没仔细看过insert代码,也可以在for循环里put函数前后获取与释放锁而无需关心insert具体是怎么实现的,当然这种情况下,由于获取锁的时间较长,造成另一个线程等待较长
 因此需要设置一组锁来加速,以避免当两个线程写入不同的桶时不需要等待
