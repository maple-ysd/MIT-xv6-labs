file system lab

Part 1

修改inode的直接与间接块以扩大单个文件的大小
12 + 256 = 268 ---> 11 + 256 + 256 * 256 = 65803

修改NDIRECT, inode与dinode数组(addrs)成员个数, 以及MAXFILE宏定义

bmap处理, 照猫画虎,添加对最后一个间接块的映射
itrunc同理.



Part 2

先介绍下什么是软链接,就是照着该路径查下去结果会到一个T_SYMLINK类型的inode里(如果模式为follow的话),然后你得再根据这个inode里提供的路径再查一次,查到对应的inode,(如果此时仍是一个T_SYMLINK, 可能还得继续重复...), 如果不follow的话,那么第一次找到的inode,就是它了

该部分墨迹了很久,本来想着简单浏览下一些相关函数就可以了,然而,果然实验的很大一个目的就是要看源码,
墨迹了很久之后还是看源码,将函数理解了做起来更顺畅

首先create函数返回的是一个上了锁的inode(当然磁盘上也已分配),不要重复ilock

新建一个inode, 保存软链接所指的路径,那么问题来了,保存到哪呢?
提示里说保存到data block, 那么就保存到inode的直接与间接块里其中一块吧,该调用哪个函数呢????

readi, writei (之前一直没仔细读过这些个函数,牵涉有点多...)然而仔细读了之后可以发现就是为了将数据写到inode上(writei),同时保存到磁盘上

alright, 参考sys_open里的inode创建,基本可以完成sys_symlink的实现

然后修改sys_open, 首先当inode类型为T_SYMLINK时, 区分模式是否为O_NOFOLLOW, 是的话基本啥也不用做

不是的话, 记得考虑个循环,如前面软链接的介绍,会重复查找,当嵌套深度超过10时,可以考虑为成环了(10就是一个近似值)

namei可以直接帮助我们找到ip对应的inode

至此,基本完成....


